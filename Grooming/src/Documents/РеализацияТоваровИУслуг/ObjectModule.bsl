#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Основание = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Стоимость = ТекСтрокаУслуги.Стоимость;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.Продажи.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;

	Движения.ТоварыНаСкладах.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать();

	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	Блокировка.Заблокировать();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Товар КАК Товар,
	|	РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Товар,
	|	РеализацияТоваровИУслугТовары.Ссылка.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровИУслугУслуги.Услуга,
	|	NULL,
	|	NULL,
	|	СУММА(РеализацияТоваровИУслугУслуги.Стоимость)
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	|ГДЕ
	|	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугУслуги.Услуга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товар,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Товар КАК Товар,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Товар.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Товар.Представление КАК ТоварПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ВТ_Товары.Склад КАК Склад,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Товар.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Товар,
	|						ВТ_Товары.Склад
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Товар = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Товар";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			СтоимостьОбщая = 0;

			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			ОсталосьСписать = 0;
			ОтрицательныеОстатки = 0;
			ЕстьОтрицательныеОстатки = Ложь;
			Если Превышение > 0 И Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""",
					ВыборкаНоменклатура.ТоварПредставление, Превышение);
				Сообщение.Сообщить();
				Отказ = Истина;

			ИначеЕсли Превышение > 0 И Не Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() Тогда
				ОсталосьСписать = ВыборкаНоменклатура.КоличествоОстаток;
				ОтрицательныеОстатки =  ВыборкаНоменклатура.КоличествоВДокументе - ОсталосьСписать;
				ЕстьОтрицательныеОстатки = Истина;
			Иначе
				ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			КонецЕсли;

			Если Отказ Тогда
				Продолжить;
			КонецЕсли;

			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл

				Списываем = Мин(ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);

				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Товар;
				Движение.Склад = ВыборкаДетальные.Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
					Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
				Иначе
					Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;

				ОсталосьСписать = ОсталосьСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
			КонецЦикла;

			Если ЕстьОтрицательныеОстатки Тогда
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаНоменклатура.Товар;
				Движение.Склад = ПредопределенноеЗначение("Справочник.Склады.Основной");
				Движение.Количество = ОтрицательныеОстатки;
				Движение.Сумма = 0;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон(
					"По номенклатуре ""%1""  образовался отрицательный остаток в количестве ""%2""",
					ВыборкаНоменклатура.ТоварПредставление, ОтрицательныеОстатки);
				Сообщение.Сообщить();
			КонецЕсли;
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Если ЕстьОтрицательныеОстатки Тогда
				Движение.Сумма = СтоимостьОбщая + ВыборкаНоменклатура.СуммаВДокументе * ОтрицательныеОстатки
					/ ВыборкаНоменклатура.КоличествоВДокументе;
			Иначе
				Движение.Сумма = СтоимостьОбщая;
			КонецЕсли;
		Иначе
			Движение = Движения.ЗаказыКлиентов.ДобавитьРасход();
			Движение.Номенклатура = ВыборкаНоменклатура.Товар;
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.ЗаписьКлиента = Основание;
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;

		КонецЕсли;
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Товар;
		Движение.Сотрудник = Сотрудник;
		Движение.Клиент = Клиент;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
	КонецЦикла;

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаписьКлиента") И Отказ = Ложь Тогда
		ДокументЗаписьКлиента = Основание.ПолучитьОбъект();
		ДокументЗаписьКлиента.УслугаОказана = Истина;
		ДокументЗаписьКлиента.Записать(РежимЗаписиДокумента.Запись);
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Стоимость");
	Если Автор.Пустая() Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;

	Если ЗначениеЗаполнено(Ссылка) И ПризнакОплаты <> Перечисления.ОплатаДокумента.ПолностьюОплачен Тогда

		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
		ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;

	КонецЕсли;
КонецПроцедуры
#КонецОбласти



